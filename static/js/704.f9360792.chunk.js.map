{"version":3,"file":"static/js/704.f9360792.chunk.js","mappings":"+MAEaA,EAAkBC,EAAAA,GAAAA,GAAH,8oB,SCsB5B,EAnBmB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAI/B,OACE,SAACJ,EAAD,WACE,UAAC,KAAD,CAAMK,GAAE,kBAAaH,GAAMI,UAAU,OAArC,WACE,gBACEC,IAAKJ,EAAK,0CAAsCA,GANtD,8EAOMK,MAAO,IACPC,IAAI,SACJH,UAAU,WAEZ,eAAIA,UAAU,QAAd,SAAuBF,QAI9B,ECpBYM,EAAmBT,EAAAA,GAAAA,GAAH,wRCW7B,EAVmB,SAAC,GAAgB,IAAdU,EAAa,EAAbA,OACpB,OACE,SAACD,EAAD,UACGC,EAAOC,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,YAAaT,EAApB,EAAoBA,MAApB,OACV,SAAC,EAAD,CAAqBF,GAAIA,EAAIC,MAAOU,EAAaT,MAAOA,GAAvCF,EADP,KAKjB,C,6JCTYY,EAAmBb,EAAAA,GAAAA,KAAH,8b,SC4B7B,EA5BmB,SAAC,GAAyB,IAAvBc,EAAsB,EAAtBA,gBAQpB,OACE,UAACD,EAAD,CAAkBE,SARK,SAAAC,GACvBA,EAAMC,iBACN,IAAMC,EAAcF,EAAMG,cAAcC,SAASjB,MAAMkB,MAEvDP,EAAgB,CAAEQ,MAAOJ,GAC1B,EAGC,WACE,4BACE,kBACEb,UAAU,QACVkB,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,UAAQ,EACRC,YAAY,mCAGhB,mBAAQJ,KAAK,SAASnB,UAAU,SAAhC,SAAyC,aAK9C,E,kBC1BYwB,EAAe7B,EAAAA,GAAAA,OAAH,sqBCQzB,EARe,SAAC,GAA2B,IAAzB8B,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACzB,OACE,SAACF,EAAD,CAAcL,KAAK,SAASM,QAASA,EAASC,SAAUA,EAAxD,SAAkE,aAIrE,ECNYC,EAAchC,EAAAA,GAAAA,IAAH,oZCsDxB,EA7Ce,WACb,OAA4BiC,EAAAA,EAAAA,UAAS,IAArC,eAAOvB,EAAP,KAAewB,EAAf,KACA,GAAwBD,EAAAA,EAAAA,UAAS,GAAjC,eAAOE,EAAP,KAAaC,EAAb,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,MAAnC,eAAOM,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqB5B,EAArB,KAEMQ,EAAQoB,EAAaC,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKtB,EAAL,CAEA,IAAMuB,EAAW,mCAAG,oGAEhBP,GAAa,GAFG,UAGGQ,EAAAA,EAAAA,IAAkBxB,EAAOa,GAH5B,OAGVY,EAHU,OAIhBb,EAAUa,GAJM,gDAMhBP,EAAS,KAAMQ,SANC,yBAQhBV,GAAa,GARG,4EAAH,qDAWjBO,GAbkB,CAcnB,GAAE,CAACvB,EAAOa,IAMX,OACE,UAACH,EAAD,YACE,SAAC,EAAD,CAAYlB,gBAAiBA,KAC7B,iBAAKT,UAAU,YAAf,UACGK,EAAOuC,OAAS,IAAK,SAACC,EAAA,EAAD,CAAYxC,OAAQA,IACzCA,EAAOuC,SAAWvC,IAAW2B,IAC5B,SAAC,EAAD,CAAQP,QAVC,WACfM,GAAQ,SAAAe,GAAQ,OAAIA,EAAW,CAAf,GACjB,IAUMd,IAAa,SAACe,EAAA,EAAD,IACbb,IAAS,uBAAIA,SAIrB,C","sources":["components/MoviesItem/MoviesItem.styled.js","components/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Form/FormMovies.styled.js","components/Form/FormMovies.jsx","components/ButtonLoadMore/Button.styled.js","components/ButtonLoadMore/Button.jsx","pages/Movies.styled.js","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledMovieItem = styled.li`\n  padding: 10px;\n  border: 1px solid blue;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  background-color: white;\n\n  .link {\n    text-decoration: none;\n    color: black;\n    font-size: 20px;\n    text-align: center;\n  }\n  .image {\n    margin: 0 auto;\n    width: 100%;\n    height: 500px;\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &hover {\n      transform: scale(1.03);\n      cursor: zoom-in;\n    }\n\n    .title {\n      text-align: center;\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { StyledMovieItem } from './MoviesItem.styled';\n\nconst MoviesItem = ({ id, image, title }) => {\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <StyledMovieItem>\n      <Link to={`/movies/${id}`} className=\"link\">\n        <img\n          src={image ? `https://image.tmdb.org/t/p/w300/${image}` : defaultImg}\n          width={300}\n          alt=\"poster\"\n          className=\"image\"\n        />\n        <h2 className=\"title\">{title}</h2>\n      </Link>\n    </StyledMovieItem>\n  );\n};\n\nexport default MoviesItem;\n","import styled from 'styled-components';\n\nexport const StyledMoviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 26px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import MoviesItem from 'components/MoviesItem/MoviesItem';\nimport { StyledMoviesList } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <StyledMoviesList>\n      {movies.map(({ id, poster_path, title }) => (\n        <MoviesItem key={id} id={id} image={poster_path} title={title} />\n      ))}\n    </StyledMoviesList>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const StyledFormMovies = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: stretch;\n  padding-top: 40px;\n  padding-bottom: 40px;\n\n  .input {\n    width: 300px;\n    height: 40px;\n    font-size: 20px;\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n    border: 2px solid blue;\n  }\n  .button {\n    height: 45px;\n    padding: 8px;\n    color: black;\n    background: #b4bffb;\n    border-radius: 5px;\n  }\n`;\n","import { StyledFormMovies } from './FormMovies.styled';\n\nconst FormMovies = ({ setSearchParams }) => {\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const searchValue = event.currentTarget.elements.title.value;\n\n    setSearchParams({ query: searchValue });\n  };\n\n  return (\n    <StyledFormMovies onSubmit={handleFormSubmit}>\n      <label>\n        <input\n          className=\"input\"\n          name=\"title\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          required\n          placeholder=\"Enter the name of the movie\"\n        />\n      </label>\n      <button type=\"submit\" className=\"button\">\n        Search\n      </button>\n    </StyledFormMovies>\n  );\n};\n\nexport default FormMovies;\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #b4bffb;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  margin-top: 20px;\n  margin-bottom: 30px;\n  min-width: 180px;\n  border: 1px solid blue;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import { StyledButton } from './Button.styled';\n\nconst Button = ({ onClick, disabled }) => {\n  return (\n    <StyledButton type=\"button\" onClick={onClick} disabled={disabled}>\n      Load more\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const StyledMovie = styled.div`\n  background-image: url(https://png.pngtree.com/thumb_back/fw800/background/20210327/pngtree-sky-petals-movie-film-powder-blue-dreamy-background-image_595553.jpg);\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-color: white;\n\n  .container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getMoviesForQuery } from 'services/api';\n\nimport FormMovies from '../components/Form/FormMovies';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport Button from 'components/ButtonLoadMore/Button';\nimport { StyledMovie } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMoviesForQuery(query, page);\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [query, page]);\n\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <StyledMovie>\n      <FormMovies setSearchParams={setSearchParams} />\n      <div className=\"container\">\n        {movies.length > 0 && <MoviesList movies={movies} />}\n        {movies.length !== movies && !isLoading && (\n          <Button onClick={loadMore} />\n        )}\n        {isLoading && <Loader />}\n        {error && <p>{error}</p>}\n      </div>\n    </StyledMovie>\n  );\n};\n\nexport default Movies;\n"],"names":["StyledMovieItem","styled","id","image","title","to","className","src","width","alt","StyledMoviesList","movies","map","poster_path","StyledFormMovies","setSearchParams","onSubmit","event","preventDefault","searchValue","currentTarget","elements","value","query","name","type","autoComplete","autoFocus","required","placeholder","StyledButton","onClick","disabled","StyledMovie","useState","setMovies","page","setPage","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","get","useEffect","fetchMovies","getMoviesForQuery","data","message","length","MoviesList","prevPage","Loader"],"sourceRoot":""}